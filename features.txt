Project Features Overview

1. Configurable JSON-Based Processing
   - Reads configurations from JSON files.
   - Supports multiple config files with product-specific mappings.
   - Validates JSON format and required keys.
   
2. User-Friendly Selection Mechanism
   - Lists available config files dynamically.
   - Allows users to choose a configuration interactively.

3. Tab-Separated Input Data Handling
   - Reads input data from a tab-separated file.
   - Extracts column headers and corresponding values.
   - Ensures required data columns are present.

4. Dynamic Placeholder Replacement in Word Documents
   - Opens and modifies .docx templates.
   - Replaces placeholders while preserving formatting.
   - Tracks replacements and logs details.
   
5. Logging and Debugging Support
   - Displays mappings between input fields and placeholders.
   - Shows counts of replacements made.
   - Verbose mode logs exact line numbers of changes.
   
6. Error Handling and Warnings
   - Detects missing config files or invalid JSON.
   - Identifies missing input data fields.
   - Checks for duplicate placeholders in config.
   - Warns if placeholders are not found in the document.
   - Ensures the expected count of replacements matches.
   - Handles template file corruption or missing files.
   
7. Looping Mode for Continuous Execution
   - Users can enable loop mode (-lp) for repeated runs.
   - Allows re-selection of configurations dynamically.
   - Option to exit anytime by pressing 'q'.
   
8. Structured Output Management
   - Saves modified documents in a defined output path.
   - Creates directories if they do not exist.
   - Ensures safe saving and error reporting on failure.
   
Usage of JSON Config File
- Specifies the template and output file paths.
- Defines mappings between input data and placeholders.
- Can include an expected replacement count for validation.

